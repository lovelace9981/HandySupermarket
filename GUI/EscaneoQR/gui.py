
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Label
from modules import cameraScanner

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./assets")


def relative_to_assets(path: str) -> Path:
    print(f"Encontrado {path}")
    return ASSETS_PATH / Path(path)


class scannerGUI:
    def __init__(self, window):

        self.window = window

        self.window.geometry("360x800")
        self.window.configure(bg="#000000")

        # Nombre de ventana de Tkinter
        self.window.title("EscaneadorQRBar")

        self.canvas = Canvas(
            self.window,
            bg="#000000",
            height=800,
            width=360,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        self.canvas.place(x=0, y=0)
        self.image_image_texto = PhotoImage(
            file=relative_to_assets("image_1.png"))
        self.image_texto = self.canvas.create_image(
            180.0,
            89.0,
            image=self.image_image_texto
        )

        self.button_image_atras = PhotoImage(
            file=relative_to_assets("button_atras.png"))
        self.button_atras = Button(
            self.window,
            image=self.button_image_atras,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.finMainloop(),
            relief="flat"
        )
        self.button_atras.place(
            x=12.0,
            y=18.0,
            width=45.0,
            height=45.0
        )

        # Incializando el panel donde alojamos el video de la camara
        self.panel = Label(self.window)

        # Posicionamiento correcto de la camara
        self.panel.place(x=0, y=200)

        self.escaneo = cameraScanner(self.panel, self.window)

        self.window.resizable(False, False)

        self.inicioMainloop()

    def inicioMainloop(self):
        self.window.mainloop()

    def finMainloop(self):
        del self.escaneo
        self.window.destroy()
